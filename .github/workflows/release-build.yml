on:
  push:
    tags:
      - "v*.*.*"
name: release-build
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    # permissions: write-all # this is the FIX
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24.5

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout tag
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          tag_name="${GITHUB_REF##*/}"
          echo Tag $tag_name
          git checkout $tag_name
          echo "TAG_NAME=${tag_name}" >> $GITHUB_ENV

      - name: Build
        run: |
          make V=1 release -j$(nproc)

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          discussion_category_name: Announcements
          # # repo_token: ${{ secrets.GITHUB_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
          # # tag: ${{ github.ref }}
          # tag_name: ${{ github.ref_name }}
          # name: ${{ env.TAG_NAME }}
          # # overwrite: true
          # overwrite_files: true
          # # file_glob: true
          append_body: true
          draft: false
          prerelease: false
          preserve_order: true
          # body_path: relnotes.md
          body: |
            The release was created by ${{ github.event.sender.login }} and commit  ${{ env.SHORT_SHA }}.
            Cmdr.v2, an arg-parser, provides a different way to start your cli app easily.

            ${{ github.event.head_commit.message }}
          files: |
            ./*.zip
          # # body: |
          # #   ${{ steps.read_release.outputs.RELEASE_BODY }}
          # body: |
          #   ${{ steps.read_release_notes_0.outputs.RELEASE_BODY }}
          # body_path: ${{ github.workspace }}-CHANGELOG.txt
          # body_path: RELNOTES.md
          # files: |
          #   LICENSE
          #   RELNOTES.md
